{
  "version": 3,
  "file": "tracker.js",
  "sourceRoot": "../src/",
  "sources": [
    "tracker.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "{Voice, Global} = require './voice'\r\n{noteByKey, indexByNote} = require './notefreq'\r\naudio = new AudioContext()\r\nsong =\r\n  patterns:\r\n    pattern1:\r\n      tracks: [\r\n        name: 'track1'\r\n        steps: [\r\n          [0,indexByNote('C',3),0.5,1]\r\n          [0,indexByNote('C',4),0.5,1]\r\n          [0,indexByNote('E',3),0.5,1]\r\n          [0,indexByNote('D',3),0.5,1]\r\n        ]\r\n      ,\r\n        name: 'track2'\r\n        steps: [\r\n          null\r\n          [1,43, 0.5,1]\r\n          null\r\n          [1,43, 0.5,1]\r\n        ]\r\n      ]\r\n  global: Global audio,\r\n    nodes:\r\n      gain:\r\n        type: 'Gain'\r\n        settings:\r\n          gain: 0.8\r\n      delay:\r\n        type: 'Delay'\r\n        settings:\r\n          delayTime: 0.5\r\n      filter:\r\n        type: 'BiquadFilter'\r\n        settings:\r\n          type: 'lowpass'\r\n          frequency: 600\r\n    globalFn: \"\"\"\r\n      this.gain.connect(output);\r\n      this.gain.connect(this.filter);\r\n      this.input = this.gain;\r\n    \"\"\"\r\n  voices: [\r\n    Voice audio, \r\n      voice:\r\n        lfo:\r\n          type: 'Oscillator'\r\n          settings:\r\n            frequency: 2.0\r\n        gain:\r\n          type: 'Gain'\r\n          settings:\r\n            gain: 0.7\r\n      instance:\r\n        osc1:\r\n          type: 'Oscillator'\r\n          settings:\r\n            frequency: 500\r\n        osc2:\r\n          type: 'Oscillator'\r\n          settings:\r\n            type: 'square'\r\n        gain1:\r\n          type: 'Gain'\r\n          settings:\r\n            gain: 0.7\r\n      voiceFn: \"\"\"\r\n        this.voice.gain.connect(output);\r\n      \"\"\"\r\n      instanceFn: \"\"\"\r\n        console.log(this.freqByIndex(noteNo), startTime);\r\n        this.instance.osc1.frequency.value = this.freqByIndex(noteNo);\r\n        this.instance.osc1.connect(this.instance.gain1);\r\n        this.instance.osc2.frequency.value = this.freqByIndex(noteNo + 7)\r\n        this.instance.osc2.connect(this.instance.gain1);\r\n        this.instance.gain1.connect(this.voice.gain);\r\n        this.voice.lfo.connect(this.instance.osc1.frequency);\r\n        this.adsr(this.instance.gain1.gain, startTime, 0.9, 0, 0.1, 0.01, length - 0.03, 0.01);\r\n      \"\"\"\r\n    Voice audio,\r\n      voice:\r\n        gain:\r\n          type: 'Gain'\r\n          settings:\r\n            gain: 0.7\r\n      instance:\r\n        buff:\r\n          type: 'AudioBufferSource'\r\n      voiceFn: \"\"\"\r\n        this.sample = await this.getFile('./15593__lewis__snaremathard.wav');\r\n        this.voice.gain.connect(output);\r\n      \"\"\"\r\n      instanceFn: \"\"\"\r\n        this.instance.buff.buffer = this.sample;\r\n        this.instance.buff.connect(this.voice.gain);\r\n      \"\"\"\r\n          \r\n  ]\r\n\r\nmodule.exports =\r\n  Tracker: ->\r\n    analyzer = new AnalyserNode audio\r\n    analyzer.connect audio.destination\r\n    viz = require('./viz') analyzer\r\n    song.global.globalFn analyzer\r\n    for voice in song.voices\r\n      await voice.voiceFn song.global.input\r\n    keydown = (e) ->\r\n      note = noteByKey e.key\r\n      if note\r\n        song.voices[0].play audio.currentTime, indexByNote(note.note, note.octave + 4), 0.5, 1.0, null\r\n    window.addEventListener 'keydown', keydown\r\n\r\n    bpm = 120\r\n    stepsPerBeat = 1\r\n    secsPerBeat = 60 / bpm\r\n    secsPerStep = secsPerBeat / stepsPerBeat\r\n    nextStepTime = 0\r\n    pattern = 'pattern1'\r\n    stepIndex = 0\r\n    process = ->\r\n      requestAnimationFrame process\r\n      if audio.currentTime >= nextStepTime\r\n        for track in song.patterns[pattern].tracks\r\n          if note = track.steps[stepIndex]\r\n            song.voices[note[0]].play audio.currentTime, note[1], note[2], note[3], null\r\n        nextStepTime += secsPerStep\r\n        stepIndex++\r\n        stepIndex = 0 if stepIndex is song.patterns[pattern].tracks[0].steps.length\r\n      viz.draw()\r\n    process()"
  ]
}