{
  "version": 3,
  "file": "voice.js",
  "sourceRoot": "../src/",
  "sources": [
    "voice.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "#wavetable = require './wave-tables/dyna-ep-bright.json'\r\n{freqByIndex} = require './notefreq'\r\nfs = require 'fs-extra'\r\nadsr = (ctx, time, aVal, aTime, dVal, dTime, sTime, rTime) ->\r\n  ctx.setValueAtTime 0.0, time\r\n  ctx.linearRampToValueAtTime aVal, time + aTime\r\n  ctx.exponentialRampToValueAtTime dVal, time + aTime + dTime\r\n  ctx.exponentialRampToValueAtTime dVal, time + aTime + dTime + sTime\r\n  ctx.exponentialRampToValueAtTime 0.00001, time + aTime + dTime + sTime + rTime\r\nmodule.exports =\r\n  Global: (audio, settings) ->\r\n    for key, node of settings.nodes\r\n      this[key] = new window[node.type + 'Node'] audio, node.settings\r\n      this[key].start audio.currentTime if this[key].start\r\n    this.globalFn = new AsyncFunction 'output', settings.globalFn\r\n    this\r\n  Voice: (audio, settings) ->\r\n    currentInstance = null\r\n    \r\n    voice = {}\r\n    for key, node of settings.voice\r\n      voice[key] = new window[node.type + 'Node'] audio, node.settings\r\n      voice[key].start audio.currentTime if voice[key].start\r\n        \r\n    getFile: (filePath) ->\r\n      console.log 'get file', filePath\r\n      response = await fs.readFile filePath\r\n      await audio.decodeAudioData response.buffer\r\n    \r\n    play: (startTime, noteNo, vel, length, global) -> \r\n      console.log @.instance\r\n      instance = {}\r\n      Object.values(this.instance).forEach (node) ->\r\n        if node.gain and node.gain.value\r\n          node.gain.cancelAndHoldAtTime startTime\r\n          node.gain.linearRampToValueAtTime 0, startTime + 0.01\r\n      for key, node of settings.instance\r\n        instance[key] = new window[node.type + 'Node'] audio, node.settings\r\n      @.instance = instance\r\n      console.log 'noteNo', noteNo\r\n      @.instanceFn startTime, noteNo, vel, length, global\r\n      for key, node of @.instance\r\n        node.start startTime if node.start\r\n        node.stop startTime + length + 0.01 if node.stop\r\n    voiceFn: new AsyncFunction 'output', settings.voiceFn\r\n    instanceFn: new Function 'startTime,noteNo,vel,length,global', settings.instanceFn\r\n    voice: voice\r\n    instance: {}\r\n    adsr: adsr\r\n    freqByIndex: freqByIndex"
  ]
}